<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tekked Out Reality</title>
    <description>Greatful Software Developer who&#39;s living the dream, one day at a time.
</description>
    <link>http://blog.tekkedout.net/</link>
    <atom:link href="http://blog.tekkedout.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 02 Jun 2016 14:22:56 -0700</pubDate>
    <lastBuildDate>Thu, 02 Jun 2016 14:22:56 -0700</lastBuildDate>
    <generator>Jekyll v3.1.3</generator>
    
      <item>
        <title>Pretify your Jekyll Twitter Shares</title>
        <description>&lt;p&gt;Ever wanted to have your, or others, Twitter posts containing links to your blog look a bit snazzier?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://blog.tekkedout.net/images/improvedTwitterPost.png&quot; alt=&quot;Improved Twitter Post&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is the &lt;a href=&quot;https://dev.twitter.com/cards/overview&quot;&gt;Twitter dev site&lt;/a&gt; for this feature. I needed more information so I scoured the web and combined information and came up with these simple steps:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are using a default Jekyll project then just follow the instructions.&lt;br /&gt;
If not you may need to put code snippets in your corrisponding locations.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Choose the image you want to have displayed on the Twitter post. This depends on which type of card you want:
    &lt;ul&gt;
      &lt;li&gt;Summary Card (Used for this demo) - At least 120px by 120px and no more than 1MB in size. For an expanded tweet and its detail page, the image will be cropped to a 4:3 aspect ratio and resized to be displayed at 120px by 90px. The image will also be cropped and resized to 120px by 120px for use in embedded tweets.&lt;/li&gt;
      &lt;li&gt;Summary Card with Large Image - At least 280px by 150px, and no more than 1MB in size.&lt;/li&gt;
      &lt;li&gt;Photo Card - All files must be below 1MB in size. Twitter will resize images, maintaining the original aspect ratio to fit the following maximum sizes:
        &lt;ul&gt;
          &lt;li&gt;Web: 375px by 435px&lt;/li&gt;
          &lt;li&gt;Mobile with a non-retina display375px by 280px&lt;/li&gt;
          &lt;li&gt;Mobile with a retina display 750px by 560px&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Gallery Card - No exact size is specified, but aim for 200px by 200px as a minimum. Images cannot exceed 1MB in size.&lt;/li&gt;
      &lt;li&gt;App Card - App logo generated from your app ID. Image should be at least 800px by 320px, and can be in jpg, jpeg, png, or gif format.&lt;/li&gt;
      &lt;li&gt;Player Card - See &lt;a href=&quot;https://dev.twitter.com/cards/types/player&quot;&gt;this page&lt;/a&gt; for more info&lt;/li&gt;
      &lt;li&gt;Product Card - 160px by 160px or greater with a 1:1 aspect ratio&lt;/li&gt;
      &lt;li&gt;Lead Generation Card - Should be at least 800px wide by 200px tall with a 4:1 aspect ratio. The maximum image size is 3 MB and you can crop and resize images after they’ve been uploaded.  Images can be in jpg, jpeg, png, or gif format.&lt;/li&gt;
      &lt;li&gt;Website Card - 800px by 320px and the image must be less than 3MB in size.&lt;/li&gt;
      &lt;li&gt;Coming Soon: Video Card - ???&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Place it into your images folder.
    &lt;ul&gt;
      &lt;li&gt;If you don’t have an images folder make a folder named &lt;code class=&quot;highlighter-rouge&quot;&gt;images&lt;/code&gt; in your root project directory and put it there.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Add the following code to your &lt;code class=&quot;highlighter-rouge&quot;&gt;_includes/head.html&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:card&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;summary&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:site&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;@TekHudson&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:title&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{% if page.title %}{{ page.title | escape }}{% else %}{{ site.title | escape }}{% endif %}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:description&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;{% if page.description %}{{ page.description | escape }}{% else %}{{ site.description | escape }}{% endif %}&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;twitter:image&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://blog.tekkedout.net/images/blogIcon.png&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;/&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;You may notice the use of &lt;code class=&quot;highlighter-rouge&quot;&gt;page.title&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;page.description&lt;/code&gt; in this code. You probably already have a &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; on all your posts. The &lt;code class=&quot;highlighter-rouge&quot;&gt;description&lt;/code&gt; will likely need to be added to any post you want to utilize the card as this is a required field for it to function correctly on Twitters end.&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-yml&quot; data-lang=&quot;yml&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;title&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;       &lt;span class=&quot;s&quot;&gt;Pretify Your Jekyll Twitter Shares&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;description&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Utilizing Twitter Cards to enhance the display of links to your pages.&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;date&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;        &lt;span class=&quot;s&quot;&gt;2016-05-23 19:30:00 -0700&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;categories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;twitter card blog post enhancement&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;And viola, when you link to your posts from twitter you should see the example image.&lt;/p&gt;

&lt;p&gt;If you have any quesitons or concerns please feel free to reach out to me via the communication methods listed on this site :D&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</description>
        <pubDate>Thu, 02 Jun 2016 08:30:00 -0700</pubDate>
        <link>http://blog.tekkedout.net/twitter/card/blog/post/2016/06/02/add-twitter-card-to-blog-post.html</link>
        <guid isPermaLink="true">http://blog.tekkedout.net/twitter/card/blog/post/2016/06/02/add-twitter-card-to-blog-post.html</guid>
        
        
        <category>twitter</category>
        
        <category>card</category>
        
        <category>blog</category>
        
        <category>post</category>
        
      </item>
    
      <item>
        <title>Why pay for SSL? Using Let&#39;s Encrypt on a Heroku Rails App</title>
        <description>&lt;p&gt;I am a contributor to a non-profit’s Open Source Software (OSS) project called &lt;a href=&quot;https://github.com/on-site/StockAid&quot;&gt;StockAid&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Recently, when faced with handing the project over to the client, we realized our SSL (Secure Sockets Layer) certification had expired.  Luckily I was hanging out with &lt;a href=&quot;https://github.com/smellsblue&quot;&gt;Mike Virta-Stone&lt;/a&gt;.  He let me know about &lt;a href=&quot;https://letsencrypt.org/&quot;&gt;Let’s Encrypt&lt;/a&gt;, a free, automated, and open certificate authority (CA), run for the public’s benefit. Let’s Encrypt is a service provided by the &lt;a href=&quot;https://letsencrypt.org/isrg/&quot;&gt;Internet Security Research Group (ISRG)&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was stoked to have found this solution for my client. Now, implimentation. I am working on a mac so I have access to &lt;a href=&quot;http://brew.sh/&quot;&gt;Homebrew&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install letsencrypt using Homebrew:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;brew install letsencrypt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;If you are not on a mac feel free to grab the source:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;git clone https://github.com/letsencrypt/letsencrypt &amp;amp;&amp;amp; cd letsencrypt&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;Run the &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt-auto&lt;/code&gt; command everywhere I use &lt;code class=&quot;highlighter-rouge&quot;&gt;letsencrypt&lt;/code&gt;.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Run Let’s Encrypt’s certificate creation manually since we aren’t on the server:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;sudo letsencrypt certonly --manual&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Enter your email.&lt;br /&gt;
&lt;img src=&quot;http://blog.tekkedout.net/images/letsencryptEmail.png&quot; alt=&quot;Enter Domain Name&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Agree to Terms of Service.&lt;br /&gt;
&lt;img src=&quot;http://blog.tekkedout.net/images/letsencryptTOS.png&quot; alt=&quot;Enter Domain Name&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Enter your domain name(s).&lt;br /&gt;
&lt;img src=&quot;http://blog.tekkedout.net/images/letsencryptDomainName.png&quot; alt=&quot;Enter Domain Name&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Confirm logging of IP (Internet Protocol) address (if you are comfortable with this). &lt;br /&gt;
&lt;img src=&quot;http://blog.tekkedout.net/images/letsencryptIPLogging.png&quot; alt=&quot;Confirm IP Logging&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Next you’ll see something like this &lt;strong&gt;(Stop do the next step before pressing Enter)&lt;/strong&gt;:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;Make sure your web server displays the following content at
http://blog.tekkedout.net/.well-known/acme-challenge/your_special_key_prefix before continuing:

your_special_key_output

If you don&#39;t have HTTP server configured, you can run the following
command on the target server (as root):

mkdir -p /tmp/letsencrypt/public_html/.well-known/acme-challenge
cd /tmp/letsencrypt/public_html
printf &quot;%s&quot; your_special_key_output &amp;gt; .well-known/acme-challenge/your_special_key_prefix
# run only once per server:
$(command -v python2 || command -v python2.7 || command -v python2.6) -c \
&quot;import BaseHTTPServer, SimpleHTTPServer; \
s = BaseHTTPServer.HTTPServer((&#39;&#39;, 80), SimpleHTTPServer.SimpleHTTPRequestHandler); \
s.serve_forever()&quot;
Press ENTER to continue&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;You’ll need to follow the instruction provided accurately or the cert will not be generated.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new controller (or use an existing one) to handle this request:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LetsencryptController&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;ApplicationController&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;skip_before_action&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:authenticate_user!&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;authenticate_key&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;render&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;text: &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;your_special_key_output&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;blockquote&gt;
  &lt;p&gt;I have devise so I had to add a skip_before_action to stop devise from preventing the page load&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
  &lt;li&gt;Add route to the &lt;code class=&quot;highlighter-rouge&quot;&gt;routes.rb&lt;/code&gt; file for your chosen controller:&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/.well-known/acme-challenge/:id&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;letsencrypt#authenticate_key&quot;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Test locally by going to localhost:3000/.well-known/acme-challenge/your_special_key_prefix and ensure your your_special_key_output is rendered.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Add, commit, push, deploy using your methods for deployment&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Test live by going to http://&lt;your_url&gt;/.well-known/acme-challenge/your_special_key_prefix and ensure your your_special_key_output is rendered (if browser complains about old ssl cert just override for this load).&lt;/your_url&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Only once you confirm this is working properly should you return to the terminal and press &lt;code class=&quot;highlighter-rouge&quot;&gt;Enter&lt;/code&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You should see this:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-plaintext&quot; data-lang=&quot;plaintext&quot;&gt;IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/blog.tekkedout.net/fullchain.pem.
   Your cert will expire on 2016-08-17. To obtain a new version of the
   certificate in the future, simply run Let&#39;s Encrypt again.
 - If you like Let&#39;s Encrypt, please consider supporting our work by:

   Donating to ISRG / Let&#39;s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Update an existing cert&lt;/strong&gt; - Free Heroku account&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;sudo heroku certs:update /etc/letsencrypt/live/your_domain_name/fullchain.pem /etc/letsencrypt/live/your_domain_name/privkey.pem&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Upload your first cert&lt;/strong&gt; - Free Heroku account&lt;/li&gt;
&lt;/ul&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;heroku addons:create ssl:endpoint&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-terminal&quot; data-lang=&quot;terminal&quot;&gt;sudo heroku certs:update /etc/letsencrypt/live/your_domain_name/fullchain.pem /etc/letsencrypt/live/your_domain_name/privkey.pem&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Paid Heroku accounts&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;I recommend checking out Heroku’s recent blog post &lt;a href=&quot;https://blog.heroku.com/archives/2016/5/18/announcing_heroku_free_ssl_beta_and_flexible_dyno_hours&quot;&gt;Announcing Heroku Free SSL Beta and Flexible Dyno Hours&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Adding the SSL Endpoint changes the CNAME you need to point your custom domain to. You’ll need to edit your DNS using the new value listed in your Heroku dashboard for it to work correctly.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hopefully this tutorial was of some use to you. If your still stuck please feel free to reach out to me via the communication methods listed on this site :D&lt;/p&gt;

&lt;p&gt;Props to the post I originally followed from &lt;a href=&quot;http://collectiveidea.com/blog/archives/2016/01/12/lets-encrypt-with-a-rails-app-on-heroku/&quot;&gt;Collective Idea&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</description>
        <pubDate>Thu, 19 May 2016 08:45:00 -0700</pubDate>
        <link>http://blog.tekkedout.net/letsencrypt/heroku/rails/ssl/2016/05/19/letsencrypt-for-heroku-rails-app.html</link>
        <guid isPermaLink="true">http://blog.tekkedout.net/letsencrypt/heroku/rails/ssl/2016/05/19/letsencrypt-for-heroku-rails-app.html</guid>
        
        
        <category>letsencrypt</category>
        
        <category>heroku</category>
        
        <category>rails</category>
        
        <category>ssl</category>
        
      </item>
    
      <item>
        <title>My fight with Impostor Syndrome (part 1)</title>
        <description>&lt;p&gt;While sitting at my laptop deciding what to write only one thought came to mind:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;What does one write in their second blog post, when they feel they have nothing to share?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I realized after sitting at my computer for nearly an hour that the reason I thoguht I had nothing to share was due to a character defect. Impostor Syndrome. Caltech’s Counceling Center has an &lt;a href=&quot;https://counseling.caltech.edu/general/InfoandResources/Impostor&quot;&gt;online resource&lt;/a&gt; that describes impostor syndrome as:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;…a collection of feelings of inadequacy that persist even in face of information that indicates that the opposite is true. It is experienced internally as chronic self-doubt, and feelings of intellectual fraudulence.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;I remember reading these words for the first time after hearing about impostor syndrome on the &lt;a href=&quot;https://devchat.tv/ruby-rogues&quot;&gt;Ruby Rogues&lt;/a&gt; podcast.&lt;/p&gt;

&lt;p&gt;It was as if I was reading the memoirs of my thoughts. There haven’t been many times, in my introspective life, that I have had such a deep connection with a set of words written by another. Ususaly it is a small poem or persons emotional sharing of thoughts. But these clinical sentances took my mind by storm.&lt;/p&gt;

&lt;p&gt;I simultaniously felt exposed, understood, comforted, and afraid. I was listening to my coding heros explain how they faced a challenge I could not only comprehend but lived with on a dialy basis.&lt;/p&gt;

&lt;p&gt;Now that I could name it, I could tame it.&lt;/p&gt;

&lt;p&gt;To be continued…&lt;/p&gt;
</description>
        <pubDate>Fri, 13 May 2016 21:50:00 -0700</pubDate>
        <link>http://blog.tekkedout.net/fight/impostor/syndrome/2016/05/13/fight-impostor-syndrome.html</link>
        <guid isPermaLink="true">http://blog.tekkedout.net/fight/impostor/syndrome/2016/05/13/fight-impostor-syndrome.html</guid>
        
        
        <category>fight</category>
        
        <category>impostor</category>
        
        <category>syndrome</category>
        
      </item>
    
      <item>
        <title>TekTip 1 - Sublime Text 3 Remapping Close Tab</title>
        <description>&lt;p&gt;I often use Sublimes powerful replace tool to do mass editing (tempting the fates I know but that is what &lt;code class=&quot;highlighter-rouge&quot;&gt;git diff&lt;/code&gt; and GitHub’s review tools are for). I got really tiered of using the &lt;code class=&quot;highlighter-rouge&quot;&gt;command+w&lt;/code&gt; feature to close all my tabs and once the last tab had closed it would close the window and thereby close my project. Here is my fix.&lt;/p&gt;

&lt;p&gt;I am currently using Sublime Text 3 (build 3103). Default action for &lt;code class=&quot;highlighter-rouge&quot;&gt;command+w&lt;/code&gt; is to close the current tab. The action it actually passes to sublime is &lt;code class=&quot;highlighter-rouge&quot;&gt;close&lt;/code&gt;. You can see this in the default key bindings (I am not sure if it is possible but even if it is I reccomend NOT editing your default bindings, override them with user as described below):&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sublime Text -&amp;gt; Preferences -&amp;gt; Key Bindings - Default&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Using this information we are able to override the default key binding with our own user binding.  To do this goto:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Sublime Text -&amp;gt; Preferences -&amp;gt; Key Bindings - User&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Here is a template of a user key binding with only the fix for this concern:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-json&quot; data-lang=&quot;json&quot;&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;keys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;super+w&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&quot;command&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;close_file&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;I hope this is of use to all you fellow Sublimites. If you have any questions please feel free to reach out to me via the communication methods listed on this site.&lt;/p&gt;

&lt;p&gt;Happy Coding!&lt;/p&gt;
</description>
        <pubDate>Mon, 09 May 2016 21:00:00 -0700</pubDate>
        <link>http://blog.tekkedout.net/tektip/sublime/text/3/keyboard/mapping/2016/05/09/sublime-tektip-1.html</link>
        <guid isPermaLink="true">http://blog.tekkedout.net/tektip/sublime/text/3/keyboard/mapping/2016/05/09/sublime-tektip-1.html</guid>
        
        
        <category>tektip</category>
        
        <category>sublime</category>
        
        <category>text</category>
        
        <category>3</category>
        
        <category>keyboard</category>
        
        <category>mapping</category>
        
      </item>
    
  </channel>
</rss>
